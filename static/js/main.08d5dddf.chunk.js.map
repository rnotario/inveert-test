{"version":3,"sources":["components/Header.module.css","components/Error.module.css","components/Loader.module.css","images/sadFace.png","hooks/useRequestMultiple.js","components/Header.js","components/Loader.js","components/Error.js","pages/UserList.js","hooks/useRequestSingle.js","pages/UserDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useRequest","initialUrl","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","ignore","a","fetch","response","ok","Error","json","fetchData","Header","username","history","useHistory","className","styles","container","Button","button","onClick","push","title","Loader","type","color","height","width","image","src","sadFace","alt","UserList","Container","Table","striped","bordered","responsive","hover","map","user","key","id","userId","style","cursor","name","email","phone","UserDetail","useParams","mt","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","readOnly","defaultValue","address","street","city","website","company","App","path","component","exact","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.08d5dddf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__37qeh\",\"button\":\"Header_button__2YUZu\",\"title\":\"Header_title__3Pcg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__6_e6m\",\"image\":\"Error_image__3rdQe\",\"title\":\"Error_title__2pbdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__8UKlS\"};","module.exports = __webpack_public_path__ + \"static/media/sadFace.ed80093f.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useRequest = (initialUrl) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(initialUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Not 2xx response\");\r\n        }\r\n        const data = await response.json();\r\n        if (!ignore) setData(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      ignore = true;\r\n    };\r\n  }, [initialUrl]);\r\n  return { data, isLoading, error };\r\n};\r\n\r\nexport default useRequest;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport styles from \"./Header.module.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Header = ({ username }) => {\r\n  const history = useHistory();\r\n\r\n  const goBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <header className={styles.container}>\r\n      {username && (\r\n        <Button className={styles.button} onClick={goBack}>\r\n          Back\r\n        </Button>\r\n      )}\r\n      <span className={styles.title}>{username || \"Users\"}</span>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\n\r\nimport styles from \"./Loader.module.css\";\r\n\r\nconst Loader = () => (\r\n  <div className={styles.container}>\r\n    <LoaderSpinner\r\n      type=\"Grid\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      // timeout={3000} //3 secs\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport sadFace from \"../images/sadFace.png\";\r\nimport styles from \"./Error.module.css\";\r\n\r\nconst Error = () => {\r\n  const history = useHistory();\r\n\r\n  const goToHomepage = () => history.push(\"/\");\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Oops..</h1>\r\n      <img className={styles.image} src={sadFace} alt=\"Sad face\" />\r\n      <Button onClick={goToHomepage}>Return to homepage</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Table, Container } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useRequest from \"../hooks/useRequestMultiple\";\r\nimport Header from \"../components/Header\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nconst UserList = () => {\r\n  const history = useHistory();\r\n  const { data, isLoading, error } = useRequest(\r\n    `https://jsonplaceholder.typicode.com/users`\r\n  );\r\n\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n\r\n  const navigateToDetail = (userId) => {\r\n    history.push(`/users/${userId}`);\r\n  };\r\n\r\n  const getRows = () =>\r\n    data.map((user) => (\r\n      <tr\r\n        key={user.id}\r\n        onClick={() => navigateToDetail(user.id)}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.phone}</td>\r\n      </tr>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Table striped bordered responsive hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre y apellidos</th>\r\n                <th>Email</th>\r\n                <th>Teléfono</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{getRows()}</tbody>\r\n          </Table>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useRequest = (initialUrl) => {\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(initialUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Not 2xx response\");\r\n        }\r\n        const data = await response.json();\r\n        if (!ignore) setData(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      ignore = true;\r\n    };\r\n  }, [initialUrl]);\r\n  return { data, isLoading, error };\r\n};\r\n\r\nexport default useRequest;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Form, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport useRequest from \"../hooks/useRequestSingle\";\r\nimport Header from \"../components/Header\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nconst UserDetail = () => {\r\n  const { id } = useParams();\r\n  const { data, isLoading, error } = useRequest(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n\r\n  const renderFormContent = () => (\r\n    <Form>\r\n      <Form.Group as={Row} controlId=\"id\">\r\n        <Form.Label column sm=\"2\">\r\n          ID\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.id} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"name\">\r\n        <Form.Label column sm=\"2\">\r\n          Name\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.name} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"username\">\r\n        <Form.Label column sm=\"2\">\r\n          Username\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.username} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"email\">\r\n        <Form.Label column sm=\"2\">\r\n          Email\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.email} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"street\">\r\n        <Form.Label column sm=\"2\">\r\n          Street\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.address.street} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"city\">\r\n        <Form.Label column sm=\"2\">\r\n          City\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.address.city} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"phone\">\r\n        <Form.Label column sm=\"2\">\r\n          Phone\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.phone} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"website\">\r\n        <Form.Label column sm=\"2\">\r\n          Website\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.website} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"companyName\">\r\n        <Form.Label column sm=\"2\">\r\n          Company\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control readOnly defaultValue={data.company.name} />\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header username={data.name} />\r\n      <Container mt={5}>\r\n        {isLoading ? <Loader /> : renderFormContent()}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDetail;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport UserList from \"./pages/UserList\";\nimport UserDetail from \"./pages/UserDetail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/users\" component={UserList} exact />\n        <Route path=\"/users/:id\" component={UserDetail} />\n        <Redirect to=\"/users\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}